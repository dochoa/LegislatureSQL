#!/usr/bin/perl

require "cmds.pl";

%options = &readOptions;

$session = $options{"session"};

for ($idx = 0; $idx < scalar(@ARGV); $idx++) {
    if ($ARGV[$idx] eq "-s") { $session = $ARGV[$idx+1]; }
    if ($ARGV[$idx] eq "-v") { $verbose = 1; }
    if ($ARGV[$idx] eq "-q") { $quiet = 1; }
}

$lynx = "/opt/local/bin/lynx -listonly -dump";

# Locate the remote directory list for this session.
#
$cmd = $lynx." ftp://leginfo.public.ca.gov/pub/".$session."/bill/asm ; ".
       $lynx." ftp://leginfo.public.ca.gov/pub/".$session."/bill/sen\n";
@lines = `$cmd`;
chomp(@lines);

foreach (@lines) {
    $line = $_;
    if ($line =~ /0$/) {
        @p = split ' ', $line;
        $line = pop @p;
        push @remoteDirs, $line;
    }
}

# print "\nREMOTE DIRS:\n".(join "\n", @remoteDirs)."\n\n";

# Get the local directory list for this session.
#
$cmd = "/usr/bin/find leginfo.public.ca.gov/pub/".$session."/bill -type d";
@lines = `$cmd`;
chomp(@lines);

foreach (@lines) { $localDir{$_} = 1; }

# Check for missing directories;
#
foreach (@remoteDirs) {
    $remote = $_;
    $remote =~ s/ftp:\/\///;
    if (! defined($localDir{$remote})) { $cmd = "mkdir -p ".$remote."\n"; print `$cmd`; }
}

foreach (@remoteDirs) {
    $cmd = $lynx." ".$_."\n";
    push @files, `$cmd`;
}

chomp(@files);

foreach (@files) { if (/\.html$/) { @p = split ' ', $_; push @html, pop @p; } }

undef @files;

print "\nFound remote files # ".scalar(@html)."\n";

foreach (@html) {
    $html = $_;

    $file = $html;
    $file =~ s/^ftp:\/\///;
    $gzFile = $file.".gz";

    if ( ! -f $file && ! -f $gzFile) {
        push @files, $file;
    }
}

print "\nNeed to fetch files # ".(scalar(@files))."\n";

print "\n";

foreach (@files) {
    print $_."\n";
}

print "Done.\n\n";

open C, ">.count";
print C scalar(@files)."\n";
close C;

undef @ftp;

foreach (@files) {
    $file = $_;

    @p = split '/', $file;

    shift @p; shift @p;

    $fileName = pop @p;

    $dir = join '/', @p;

    push @ftp, "cd ".$dir;
    push @ftp, "lcd ".$dir;
    push @ftp, "get ".$fileName;
    push @ftp, "cd ../../../..";
    push @ftp, "lcd ../../../..";
}

if (scalar(@ftp) > 0) {

    open FTP, "| /usr/bin/ftp leginfo.public.ca.gov";
    print FTP "cd pub\n";
    print FTP "lcd leginfo.public.ca.gov/pub\n";
    foreach (@ftp) { print FTP $_."\n"; }
    close FTP;
}

# pub/11-12/bill/sen/sb_1551-1600/sb_1570_bill_20120227_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1570_bill_20120509_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1571_bill_20120227_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1571_bill_20120924_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1572_bill_20120918_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1573_bill_20120227_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1573_bill_20120322_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1574_bill_20120710_status.html

print "\n";

$done = "n";

while ($done ne "y") {

    $cmd = "find leginfo.public.ca.gov/pub/".$session."/bill -name \*status.html | sort";
    @statuses = `$cmd`;
    chomp(@statuses);

    $done = "y";

    $deleted = 0;

    undef %status;

    foreach (@statuses) {
        $statusFile = $_;

        @p = split '/', $statusFile;
        $fileName = pop @p;
        @p = split '_', $fileName;
        $billNum = $p[0]."_".$p[1];
        # print "statusFile \"".$statusFile."\" -> \"".$billNum."\"\n";

        $idx = 0;
        while (defined($status{$billNum}[$idx])) { $idx++; }

        $status{$billNum}[$idx] = $statusFile;
    }

    foreach (sort keys %status) {
        $billNum = $_;
        $idx = 0;
        while (defined($status{$billNum}[$idx])) {
            #print "status{".$billNum."}[".$idx."] = \"".$status{$billNum}[$idx]."\"\n";
            $idx++;
        }

        if (defined($status{$billNum}[1])) {
            # print "deleting status{".$billNum."}[0] = \"".$status{$billNum}[0]."\"\n";
            unlink ($status{$billNum}[0]);
            $deleted++;
            $done = "n";
        }
    }

    print "deleted status file # ".$deleted." ";
    if ($done eq "y") { print "Done."; } else { print "Not Done."; }
    print "\n";
}

$done = "n";

while ($done ne "y") {

    $cmd = "find leginfo.public.ca.gov/pub/".$session."/bill -name \*history.html | sort";
    @historys = `$cmd`;
    chomp(@historys);

    $done = "y";

    $deleted = 0;

    undef %history;

    foreach (@historys) {
        $historyFile = $_;

        @p = split '/', $historyFile;
        $fileName = pop @p;
        @p = split '_', $fileName;
        $billNum = $p[0]."_".$p[1];
        # print "historyFile \"".$historyFile."\" -> \"".$billNum."\"\n";

        $idx = 0;
        while (defined($history{$billNum}[$idx])) { $idx++; }

        $history{$billNum}[$idx] = $historyFile;
    }

    foreach (sort keys %history) {
        $billNum = $_;
        $idx = 0;
        while (defined($history{$billNum}[$idx])) {
            #print "history{".$billNum."}[".$idx."] = \"".$history{$billNum}[$idx]."\"\n";
            $idx++;
        }

        if (defined($history{$billNum}[1])) {
            print "deleting history{".$billNum."}[0] = \"".$history{$billNum}[0]."\"\n";
            unlink ($history{$billNum}[0]);
            $deleted++;
            $done = "n";
        }
    }

    print "deleted history file # ".$deleted." ";
    if ($done eq "y") { print "Done."; } else { print "Not Done."; }
    print "\n";
}

print "\n";

exit(0);
