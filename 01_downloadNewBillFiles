#!/usr/bin/perl

require "cmds.pl";

%options = &readOptions;

$session = $options{"session"};

for ($idx = 0; $idx < scalar(@ARGV); $idx++) {
    if ($ARGV[$idx] eq "-s") { $session = $ARGV[$idx+1]; }
    if ($ARGV[$idx] eq "-v") { $verbose = 1; }
    if ($ARGV[$idx] eq "-q") { $quiet = 1; }
}

$lynx = "/opt/local/bin/lynx -listonly -dump";

# Locate the remote directory list for this session.
#
$cmd = $lynx." ftp://leginfo.public.ca.gov/pub/".$session."/bill/asm ; ".
       $lynx." ftp://leginfo.public.ca.gov/pub/".$session."/bill/sen\n";
@lines = `$cmd`;
chomp(@lines);

foreach (@lines) {
    $line = $_;
    if ($line =~ /0$/) {
        @p = split ' ', $line;
        $line = pop @p;
        push @remoteDirs, $line;
    }
}

# print "\nREMOTE DIRS:\n".(join "\n", @remoteDirs)."\n\n";

# Get the local directory list for this session.
#
$cmd = "/usr/bin/find leginfo.public.ca.gov/pub/".$session."/bill -type d";
@lines = `$cmd`;
chomp(@lines);

foreach (@lines) { $localDir{$_} = 1; }

# Check for missing directories;
#
foreach (@remoteDirs) {
    $remote = $_;
    $remote =~ s/ftp:\/\///;
    if (! defined($localDir{$remote})) { $cmd = "mkdir -p ".$remote."\n"; print `$cmd`; }
}

foreach (@remoteDirs) {
    $cmd = $lynx." ".$_."\n";
    push @files, `$cmd`;
}

chomp(@files);

foreach (@files) { if (/\.html$/) { @p = split ' ', $_; push @html, pop @p; } }

undef @files;

print "\nFound remote files # ".scalar(@html)."\n";

foreach (@html) {
    $html = $_;

    $file = $html;
    $file =~ s/^ftp:\/\///;
    $gzFile = $file.".gz";

    if ( ! -f $file && ! -f $gzFile) {
        push @files, $file;
    }
}

print "\nNeed to fetch files # ".(scalar(@files))."\n";

print "\n";

foreach (@files) {
    print $_."\n";
}

print "Done.\n\n";

open C, ">.count";
print C scalar(@files)."\n";
close C;

undef @ftp;

foreach (@files) {
    $file = $_;

    @p = split '/', $file;

    shift @p; shift @p;

    $fileName = pop @p;

    $dir = join '/', @p;

    push @ftp, "cd ".$dir;
    push @ftp, "lcd ".$dir;
    push @ftp, "get ".$fileName;
    push @ftp, "cd ../../../..";
    push @ftp, "lcd ../../../..";
}

if (scalar(@ftp) > 0) {

    open FTP, "| /usr/bin/ftp leginfo.public.ca.gov";
    print FTP "cd pub\n";
    print FTP "lcd leginfo.public.ca.gov/pub\n";
    foreach (@ftp) { print FTP $_."\n"; }
    close FTP;
}

$cmd = "find leginfo.public.ca.gov/pub/".$session."/bill -name \*status\*.html | sort";
@statuses = `$cmd`;
chomp(@statuses);

# pub/11-12/bill/sen/sb_1551-1600/sb_1570_bill_20120227_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1570_bill_20120509_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1571_bill_20120227_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1571_bill_20120924_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1572_bill_20120918_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1573_bill_20120227_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1573_bill_20120322_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1574_bill_20120710_status.html

$deleted = 0;

foreach (@statuses) {
    $status = $_;

    @parts = split '/', $status;

    $fileName = pop @parts;
    $dir = pop @parts;
    if ($fileName =~ /_bill_/) {
        $billNum = $dir."/".$`;

        if (defined($billStatus{$billNum})) {
            print "deleting \"".$billStatus{$billNum}."\"\n";
            unlink $billStatus{$billNum};
            $deleted++;
        }
        $billStatus{$billNum} = $status;
    }
}
 
print "\nDeleted status files # ".$deleted."\n\n";

$cmd = "find leginfo.public.ca.gov/pub/".$session."/bill -name \*history\*.html | sort";
@historys = `$cmd`;
chomp(@historys);
 
$deleted = 0;
 
foreach (@historys) {
    $history = $_;
 
    @parts = split '/', $history;
 
    $fileName = pop @parts;
    $dir = pop @parts;
    if ($fileName =~ /_bill_/) {
        $billNum = $dir."/".$`;
 
        if (defined($billhistory{$billNum})) {
            print "deleting \"".$billhistory{$billNum}."\"\n";
            unlink $billhistory{$billNum};
            $deleted++;
        }
        $billhistory{$billNum} = $history;
     }
 }
 
print "\nDeleted history files # ".$deleted."\n\n";

exit(0);

