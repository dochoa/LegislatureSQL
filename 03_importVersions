#!/usr/bin/perl

require "cmds.pl";

%options = &readOptions;

$session = $options{"session"};

for ($idx = 0; $idx < scalar(@ARGV); $idx++) {
    if ($ARGV[$idx] eq "-s") { $session = $ARGV[$idx+1]; }
}

@versionsInFiles = &doCmdResults("find leginfo.public.ca.gov/pub/".$session."/bill -name \*_bill_\* | grep -v status | grep -v history\n");

@versionsInDB = &doSqlResults("select version_file from bill_versions;");

print "\nFound bill versions in files # ".scalar(@versionsInFiles)." and bill versions in DB # ".scalar(@versionsInDB)."\n";

if (scalar(@versionsInFiles) > scalar(@versionsInDB)) {

    $maxPk = &doSqlResult("select max(pk) from bill_versions;");

    if ($maxPk eq "NULL") { $maxPk = 0; }

    foreach (@versionsInDB) { $versionsInDB{$_} = 1; }

    $idx = 0;

    foreach (@versionsInFiles) {

        $file = $_;

        if (($file !~ /status.html$/) && ($file !~ /history.html$/) && (! defined($versionsInDB{$file}))) {

            @parts = split '_', $file;

            $dateStr = substr($parts[4],0,4)."-".substr($parts[4],4,2)."-".substr($parts[4],6,2);

            splice @parts, 0, 5;

            $versionType = join "_", @parts;
            $versionType =~ s/\.html$//;

            @parts = split '/', $file;
            $last = pop @parts;
            ($house, $num, $x) = split '_', $last;

            $billNum = $house."_".$num;

            # print "file: \"".$file."\"\n";
            # print "dateStr: \"".$dateStr."\"\n";
            # print "versionType: \"".$versionType."\"\n\n";

            $maxPk++;

            push @sql, "insert into bill_versions (pk, bill_num, version_file, version_date, version_type) ".
                       "values (".$maxPk.", '".$billNum."', '".$file."', '".$dateStr."', '".$versionType."');\n";
        }
    }
}

open M, "| ".$mysql; foreach (@sql) { print M $_; } close M;

print "\nBill versions added # ".scalar(@sql)."\n";

@sql = ();

print "\n";

exit(0);
