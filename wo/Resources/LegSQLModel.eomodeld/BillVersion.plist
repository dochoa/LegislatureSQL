{
    attributes = (
        {
            columnName = authors; 
            externalType = varchar; 
            name = authors; 
            valueClassName = NSString; 
            width = 1024; 
        }, 
        {
            columnName = "authors_next"; 
            externalType = varchar; 
            name = authorsNext; 
            valueClassName = NSString; 
            width = 10240; 
        }, 
        {
            columnName = "bill_pk"; 
            externalType = int; 
            name = billPk; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = coauthors; 
            externalType = varchar; 
            name = coauthors; 
            valueClassName = NSString; 
            width = 1024; 
        }, 
        {
            columnName = file; 
            externalType = varchar; 
            name = file; 
            valueClassName = NSString; 
            width = 128; 
        }, 
        {
            columnName = "file_date"; 
            externalType = CHAR; 
            name = fileDate; 
            valueClassName = NSString; 
            width = 10; 
        }, 
        {
            columnName = kind; 
            externalType = varchar; 
            name = kind; 
            valueClassName = NSString; 
            width = 32; 
        }, 
        {
            columnName = pk; 
            externalType = INT; 
            name = pk; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = title; 
            externalType = varchar; 
            name = title; 
            valueClassName = NSString; 
            width = 10240; 
        }
    ); 
    attributesUsedForLocking = (billPk, pk); 
    className = "org.ganymede.leginfo.eo.BillVersion"; 
    classProperties = (
        authorings, 
        authors, 
        authorsNext, 
        bill, 
        coauthors, 
        codeSections, 
        file, 
        fileDate, 
        kind, 
        title, 
        woulds
    ); 
    externalName = "bill_versions"; 
    fetchSpecificationDictionary = {}; 
    name = BillVersion; 
    primaryKeyAttributes = (pk); 
    relationships = (
        {
            destination = BillAuthoring; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = billVersionPk; sourceAttribute = pk; }); 
            name = authorings; 
        }, 
        {
            destination = Bill; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = pk; sourceAttribute = billPk; }); 
            name = bill; 
        }, 
        {
            destination = CodeSectionJoin; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = billVersionPk; sourceAttribute = pk; }); 
            name = codeSectionJoins; 
        }, 
        {definition = "codeSectionJoins.codeSection"; name = codeSections; }, 
        {
            destination = BillWould; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = versionPk; sourceAttribute = pk; }); 
            name = woulds; 
        }
    ); 
}
